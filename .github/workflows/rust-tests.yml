name: Rust Tests

on:
  push:
    branches:
      - main
      - develop
      - feature/**
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Run cargo nextest on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      # 1️⃣ Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Rust-Toolchain einrichten (stable)
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      # 3️⃣ Cargo Cache aktivieren (Registry, Git und Build-Artefakte)
      - name: Cache cargo build data
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # 4️⃣ Abhängigkeiten vorab laden (beschleunigt nachfolgenden Build)
      - name: Fetch dependencies
        run: cargo fetch

      # 5️⃣ Projekt bauen
      - name: Build project
        run: cargo build --all --all-features --locked --verbose

      # 6️⃣ cargo-nextest installieren
      - name: Install cargo-nextest
        run: cargo install cargo-nextest --locked

      # 7️⃣ Tests mit cargo nextest ausführen
      - name: Run tests with cargo nextest
        run: cargo nextest run --all --all-features --locked --verbose
