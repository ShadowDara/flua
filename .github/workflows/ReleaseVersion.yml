# Main Workflow to make the Releases

name: Build & Release flua

on:
  push:
    tags:
      - "*" # Trigger bei jedem Tag

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""

          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   ext: ".exe"

          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build (non-ARM)
        if: matrix.target != 'aarch64-unknown-linux-gnu'
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: flua-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/flua${{ matrix.ext }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: flua-x86_64-unknown-linux-gnu
          path: release-assets/linux

      - name: Download Mac artifact
        uses: actions/download-artifact@v4
        with:
          name: flua-x86_64-apple-darwin
          path: release-assets/macos

      - name: Rename binaries
        run: |
          mv release-assets/linux/flua release-assets/flua-linux-x86_64
          mv release-assets/macos/flua release-assets/flua-macos-x86_64

      - name: Debug - zeige heruntergeladene Dateien
        run: ls -R release-assets

      - name: Flatten artifact directory
        run: |
          find release-assets -type f -exec mv {} release-assets/ \;
          find release-assets -type d -empty -delete

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Release built by CI for tag ${{ github.ref_name }}. See **[CHANGELOG.md](https://github.com/ShadowDara/flua/blob/master/CHANGELOG.md#${{ github.ref_name }})** for Changelogs.
          artifacts: |
            release-assets/*
          artifactErrorsFailBuild: true

  release_windows:
    name: Publish for Windows
    uses: shadowdara/flua/.github/workflows/ReleaseWindows.yml@main
    needs: release
  
  # release_windows_arm:
  #   name: Publish for Windows ARM
  #   uses: shadowdara/flua/.github/workflows/ReleaseWindowsArm.yml@main
  #   needs: release

  release_docs:
    name: Publish Docs
    uses: shadowdara/flua/.github/workflows/ReleaseDocs.yml@main
    needs: release
